{"version":3,"sources":["components/comments/index.js","components/alert_comment/index.js","utility/constants.js","components/region_view/index.js","components/severity_indicator/index.js","components/header_text_card/index.js","components/description/index.js","components/chat_message_box/index.js","components/status_select/index.js","components/modal_data_card/index.js","components/detailed_data_modal/index.js","navigation/mapview/index.js","navigation/dashboard/index.js","navigation/profile/index.js","components/pie_chart/index.js","components/bar_chart/index.js","components/alert_update_user_status/index.js","navigation/users/index.js","navigation/navbar/index.js","components/header_separator/index.js","components/signup/index.js","components/authentication/index.js","components/not_found/index.js","App.js","serviceWorker.js","index.js"],"names":["self","CLIENT_ID","AWS_SERVER_DOMAIN","GET_GEO_NEAR_REPORTS","SEND_EMAIL","MapView","compose","withProps","googleMapURL","loadingElement","style","height","containerElement","mapElement","withStateHandlers","isOpen","infoIndex","selectedReports","heatMapOn","onToggleOpen","index","toggleHeatMap","heatOn","withScriptjs","withGoogleMap","lifecycle","componentDidMount","this","axios","post","data","authorityId","props","then","response","heatMapData","map","report","location","google","maps","LatLng","latitude","longitude","weight","severity","setState","catch","error","console","info","Button","variant","color","onClick","float","marginTop","marginBottom","position","defaultZoom","defaultCenter","lat","parseFloat","centerLat","lng","centerLng","iconMarkerImage","parseInt","iconMarker","window","MarkerImage","Size","icon","key","onCloseClick","visible","display","justifyContent","marginRight","paddingRight","paddingBottom","fontWeight","lineHeight","created_date","split","status","charAt","toUpperCase","slice","goToReport","src","imageURL","width","border","borderRadius","alt","options","radius","opacity","SeverityIndicator","handleChange","event","value","updateSeverityValue","state","classes","className","root","Slider","container","slider","min","max","step","valueLabelDisplay","onChange","React","Component","withStyles","padding","HeaderTextCard","Typography","gutterBottom","text","editIcon","fontSize","DescriptionBox","makeEmpty","content","checkRequired","textFieldRef","current","target","errorRequired","descriptionValue","trim","undefined","updateDescription","createRef","passMakeEmpty","TextField","inputRef","required","fullWidth","placeholder","multiline","rows","rowsMax","label","ChatMessage","ChatMsg","avatar","profileURL","side","messages","messageArray","Comments","setDescription","description","commentText","buttonDisabled","getAllComments","caseId","manageCommentData","formatDateTime","dateTimeToFormat","dateTime","Date","formattedMonth","toLocaleString","month","formattedTime","toLocaleTimeString","hour","minute","getDate","getFullYear","commentsData","length","prevUserType","userType","currentSequence","commentComponentArray","counter","comment","push","commentDateTime","getChatMessageSide","handleSubmit","res","emptyDescriptionBox","makeBoxEmptyFunction","makeBoxEmpty","caseNumber","item","i","emptyBox","disabled","optionsArray","StatusSelect","mapOptions","indexToSplitOn","indexOf","splice","selectedValue","updateSelectedValue","capitalize","str","x","substr","join","FormControl","InputLabel","htmlFor","Select","native","optionValue","AlertDialogWithComment","updatedStatus","toLowerCase","updatedSeverity","reponse","statusMessage","mailToProfileName","emailId","mailToProfileEmail","subject","message","reload","justClose","updateCloseDialogState","Dialog","open","dialogOpenState","onClose","aria-labelledby","aria-describedby","DialogTitle","id","title","DialogContent","component","DialogContentText","DialogActions","autoFocus","buttonText","useStyles","makeStyles","maxWidth","margin","media","mediaMap","headerTextColor","DetailedDataCard","useState","statusValue","updateStatusValue","severityValue","mapImageURL","Card","CardMedia","image","CardContent","Avatar","profileName","verticalAlign","top","profileEmail","textAlign","backgroundColor","DetailedDataModal","setOpen","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","handleClose","descriptionElementRef","useRef","useEffect","descriptionElement","focus","scroll","dividers","styles","flexGrow","paper","palette","secondary","MapRegionView","updateDataCounter","dataCounter","paramData","detailedDataModal","formatDate","case_id","user_photo_url","user_full_name","user_email","date","parse","mapView","authorityAddress","authorityName","address","name","Container","Grid","spacing","sm","xs","Paper","large","marginLeft","Profile","pendingCount","cancelledCount","approvedCount","completedCount","inProgressCount","filter","minWidth","photoURL","letterSpacing","Link","href","email","Divider","Box","p","flex","fontFamily","pos","COLORS","PieChartBlock","makeData","madeData","forEach","dataToUse","dataKey","isAnimationActive","cx","cy","outerRadius","innerRadius","paddingAngle","entry","stroke","fill","PureComponent","Dashboard","reportsDataTable","dataModal","completeData","log","formattedData","formattedReport","Object","keys","AlertDialog","updateUserStatus","linkTo","Users","updateDialogState","userId","clickedRow","allowedMessage","blockedMessage","usersDataTable","Name","Email","user_status","values","finalColumns","columnName","column","filterType","onRowClick","rowData","rowState","selectableRows","createMuiTheme","type","overrides","MuiTableRow","cursor","columns","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","mixins","toolbar","contentShift","inputRoot","inputInput","up","PersistentDrawerLeft","handleDrawerClose","CssBaseline","AppBar","clsx","Toolbar","IconButton","aria-label","edge","noWrap","Drawer","anchor","direction","List","to","ListItem","button","ListItemIcon","ListItemText","primary","HeaderSeparator","backgroundImage","backgroundRepeat","grey","backgroundSize","backgroundPosition","flexDirection","main","form","submit","paddingTop","SignInSide","md","elevation","square","backgroundBlendMode","borderLeft","document","getElementsByClassName","click","Auth","callRender","successCallback","gapi","load","opts","client_id","onsuccess","longTitle","signin2","render","logout","redirectURL","isSignedIn","auth2","getAuthInstance","signOut","get","localStorage","setItem","urlRedirect","url","X","setTimeout","replace","clearTimeout","validateAndPostProfileData","basicProfile","getEmail","getId","getName","getImageUrl","err","navigationBar","profilePhotoURL","onSuccess","bind","init","currentUser","getBasicProfile","getItem","loginStatus","NotFound","MuiPaper","MuiStepper","App","ThemeProvider","path","exact","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.97bb0e95.chunk.js","sourcesContent":["// this component is used inside view report\r\n// section in the my complaints route. uses the mui treasury\r\n// chat message component to render the message array.\r\n// manipulates the comments data received from the backend\r\n// and creates the user/authority message array.\r\n// also contains the component to post a new message\r\nimport React from \"react\";\r\nimport DescriptionBox from \"./../description\";\r\nimport axios from \"axios\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ChatMessage from \"./../chat_message_box\";\r\nimport {\r\n  GET_REPORT_COMMENTS,\r\n  SUBMIT_REPORT_COMMENT\r\n} from \"./../../utility/constants.js\";\r\n\r\nlet self;\r\nclass Comments extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      commentText: \"\",\r\n      caseId: props.caseNumber,\r\n      userType: \"A\",\r\n      buttonDisabled: true,\r\n      commentComponentArray: [],\r\n      emptyDescriptionBox: false,\r\n      makeBoxEmptyFunction: \"\"\r\n    };\r\n    self = this;\r\n    this.getAllComments();\r\n  }\r\n\r\n  // for a new message, updates the state\r\n  // of the submit button (validation)\r\n  setDescription = description => {\r\n    this.setState({\r\n      commentText: description\r\n    });\r\n    if (description === \"\") {\r\n      this.setState({\r\n        buttonDisabled: true\r\n      });\r\n    } else {\r\n      this.setState({\r\n        buttonDisabled: false\r\n      });\r\n    }\r\n  };\r\n\r\n  // gets all the user comments for the\r\n  // particular report from the backend\r\n  getAllComments = () => {\r\n    axios\r\n      .post(GET_REPORT_COMMENTS, { data: { caseId: this.state.caseId } })\r\n      .then(function(response) {\r\n        self.manageCommentData(response.data);\r\n      })\r\n      .catch(function(error) {\r\n        console.info(\"Problem with getting your comments!\");\r\n      });\r\n  };\r\n\r\n  // formats the date to be seen on the chat message\r\n  formatDateTime = dateTimeToFormat => {\r\n    let dateTime = new Date(dateTimeToFormat);\r\n    let formattedMonth = dateTime.toLocaleString(\"en\", { month: \"long\" });\r\n    let formattedTime = dateTime.toLocaleTimeString([], {\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\"\r\n    });\r\n    return (\r\n      dateTime.getDate() +\r\n      \" \" +\r\n      formattedMonth +\r\n      \", \" +\r\n      dateTime.getFullYear() +\r\n      \" @ \" +\r\n      formattedTime +\r\n      \" → \\n\"\r\n    );\r\n  };\r\n\r\n  // manipulates the comments data received from the backend and\r\n  // creates the message array to be passed to the mui treasury component\r\n  manageCommentData = commentsData => {\r\n    if (commentsData.length > 0) {\r\n      let prevUserType = commentsData[0].userType;\r\n      let currentSequence = [];\r\n      let commentComponentArray = [];\r\n      let counter = 1;\r\n      commentsData.map(comment => {\r\n        if (comment.userType === prevUserType) {\r\n          currentSequence.push(\r\n            this.formatDateTime(comment.commentDateTime) + comment.commentText\r\n          );\r\n          prevUserType = comment.userType;\r\n        } else {\r\n          commentComponentArray.push(\r\n            <ChatMessage\r\n              messageArray={currentSequence}\r\n              side={self.getChatMessageSide(prevUserType)}\r\n              profileURL={this.props.profileURL}\r\n            />\r\n          );\r\n          prevUserType = comment.userType;\r\n          currentSequence = [];\r\n          currentSequence.push(\r\n            this.formatDateTime(comment.commentDateTime) + comment.commentText\r\n          );\r\n        }\r\n\r\n        // push for last sequence\r\n        if (counter === commentsData.length) {\r\n          commentComponentArray.push(\r\n            <ChatMessage\r\n              messageArray={currentSequence}\r\n              profileURL={this.props.profileURL}\r\n              side={self.getChatMessageSide(prevUserType)}\r\n            />\r\n          );\r\n        }\r\n        ++counter;\r\n\r\n        return comment;\r\n      });\r\n      self.setState({\r\n        commentComponentArray: commentComponentArray\r\n      });\r\n    }\r\n    return true;\r\n  };\r\n\r\n  // based on the user type in the chat message\r\n  // associates a message side to it\r\n  getChatMessageSide = userType => {\r\n    return userType === \"U\" ? \"left\" : \"right\";\r\n  };\r\n\r\n  // submits a new comment entered in the description box\r\n  // handles the submission to the backend and clears the description box too\r\n  handleSubmit = () => {\r\n    axios\r\n      .post(SUBMIT_REPORT_COMMENT, { data: this.state })\r\n      .then(res => {\r\n        self.setState({\r\n          emptyDescriptionBox: true\r\n        });\r\n        self.state.makeBoxEmptyFunction();\r\n        this.getAllComments();\r\n      })\r\n      .catch(function(error) {\r\n        console.info(\"Problem with submitting your comment!\");\r\n      });\r\n  };\r\n\r\n  // empties the description box by resetting the state variable\r\n  makeEmpty = makeBoxEmpty => {\r\n    self.setState({\r\n      makeBoxEmptyFunction: makeBoxEmpty\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <br />\r\n        {this.state.commentComponentArray.map(function(item, i) {\r\n          return <div key={i}>{item}</div>;\r\n        })}\r\n        <br />\r\n        <DescriptionBox\r\n          passMakeEmpty={this.makeEmpty}\r\n          emptyBox={this.state.emptyDescriptionBox}\r\n          updateDescription={self.setDescription}\r\n        />\r\n        <Button\r\n          onClick={() => this.handleSubmit()}\r\n          color=\"primary\"\r\n          disabled={this.state.buttonDisabled}\r\n          style={{ fontSize: \"15px\", fontWeight: \"bold\" }}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Comments;\r\n","// alert dialog uses a required description box\r\n// is used in update report section.\r\n// gives the authority the option to have a\r\n// final confirmation before updating the report\r\nimport React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DescriptionBox from \"./../description\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport HeaderTextCard from \"./../header_text_card\";\r\nimport {\r\n  UPDATE_REPORT_STATUS,\r\n  SUBMIT_REPORT_COMMENT,\r\n  SEND_EMAIL\r\n} from \"./../../utility/constants.js\";\r\nimport axios from \"axios\";\r\n\r\nlet self;\r\nexport default class AlertDialogWithComment extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      makeBoxEmptyFunction: \"\",\r\n      commentText: \"\",\r\n      buttonDisabled: true\r\n    };\r\n    self = this;\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    let updatedStatus = this.props.updatedStatus.toLowerCase();\r\n    let updatedSeverity = this.props.updatedSeverity;\r\n    let caseId = this.props.caseId;\r\n    axios\r\n      .post(UPDATE_REPORT_STATUS, {\r\n        data: {\r\n          caseId: caseId,\r\n          status: updatedStatus,\r\n          severity: updatedSeverity\r\n        }\r\n      })\r\n      .then(reponse => {\r\n        axios\r\n          .post(SUBMIT_REPORT_COMMENT, {\r\n            data: {\r\n              commentText:\r\n                \"Authority's Update - [Status: \" +\r\n                self.props.updatedStatus +\r\n                \", Severity: \" +\r\n                updatedSeverity +\r\n                \"] - \" +\r\n                self.state.commentText,\r\n              caseId: caseId,\r\n              userType: \"A\"\r\n            }\r\n          })\r\n          .then(response => {\r\n            console.info(\"Report Updated\");\r\n\r\n            // For sending email to notify user\r\n\r\n            let statusMessage =\r\n              \"Hi \" +\r\n              self.props.mailToProfileName +\r\n              \",\\n\\nThere is an update to your report. Please login to check the details. Thanks for being a part of the Spothole community.\";\r\n            axios\r\n              .post(SEND_EMAIL, {\r\n                data: {\r\n                  emailId: self.props.mailToProfileEmail,\r\n                  subject:\r\n                    \"New Notification from Spothole (Your Report Status)\",\r\n                  message: statusMessage\r\n                }\r\n              })\r\n              .then(response => {\r\n                console.info(response.data);\r\n                window.location.reload();\r\n              })\r\n              .catch(error => {\r\n                window.location.reload();\r\n              });\r\n          })\r\n          .catch(error => {\r\n            console.info(\"Unable to Update Report\");\r\n          });\r\n      })\r\n      .catch(error => {\r\n        console.info(\"Unable to Update Report\");\r\n      });\r\n  };\r\n\r\n  // for a new message, updates the state\r\n  // of the submit button (validation)\r\n  setDescription = description => {\r\n    this.setState({\r\n      commentText: description\r\n    });\r\n    if (description === \"\") {\r\n      this.setState({\r\n        buttonDisabled: true\r\n      });\r\n    } else {\r\n      this.setState({\r\n        buttonDisabled: false\r\n      });\r\n    }\r\n  };\r\n\r\n  justClose = () => {\r\n    this.props.updateCloseDialogState();\r\n  };\r\n\r\n  // empties the description box by resetting the state variable\r\n  makeEmpty = makeBoxEmpty => {\r\n    self.setState({\r\n      makeBoxEmptyFunction: makeBoxEmpty\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={this.props.dialogOpenState}\r\n          onClose={() => this.justClose()}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{this.props.title}</DialogTitle>\r\n          <DialogContent>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              {/* for the severity label*/}\r\n              <HeaderTextCard\r\n                text={\"Updated Severity → \" + this.props.updatedSeverity}\r\n                marginBottom=\"12px\"\r\n                color={\"primary\"}\r\n              />\r\n              {/* for the status label*/}\r\n              <HeaderTextCard\r\n                text={\"Updated Status → \" + this.props.updatedStatus}\r\n                marginBottom=\"12px\"\r\n                color={\"primary\"}\r\n              />\r\n            </Typography>\r\n            <br />\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              <DescriptionBox\r\n                passMakeEmpty={this.makeEmpty}\r\n                updateDescription={this.setDescription}\r\n              />\r\n              <Button\r\n                onClick={() => this.handleSubmit()}\r\n                color=\"primary\"\r\n                disabled={this.state.buttonDisabled}\r\n                style={{ fontSize: \"15px\", fontWeight: \"bold\" }}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={() => this.justClose()}\r\n              color={this.props.color}\r\n              autoFocus\r\n            >\r\n              {this.props.buttonText}\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// all server and image constants.\r\nexport const CLIENT_ID =\r\n  \"53865530561-eoook3l9t27uvkec6561d3aolde6mims.apps.googleusercontent.com\";\r\nexport const AWS_SERVER_DOMAIN = \"https://spothole.ml:5000\";\r\nexport const SUBMIT_REPORT_COMMENT =\r\n  AWS_SERVER_DOMAIN + \"/api/submit/report/comment\";\r\nexport const GET_REPORT_COMMENTS = AWS_SERVER_DOMAIN + \"/api/reports/comments\";\r\nexport const UPDATE_AUTHORITY_PROFILE =\r\n  AWS_SERVER_DOMAIN + \"/api/profile/authority/update\";\r\nexport const VALIDATE_AUTHORITY = AWS_SERVER_DOMAIN + \"/api/authority/check\";\r\nexport const GET_GEO_NEAR_REPORTS =\r\n  AWS_SERVER_DOMAIN + \"/api/authority/reports/geonear\";\r\nexport const UPDATE_REPORT_STATUS =\r\n  AWS_SERVER_DOMAIN + \"/api/authority/update/report\";\r\nexport const GET_AUTHORITY_PROFILE =\r\n  AWS_SERVER_DOMAIN + \"/api/profile/authority/data\";\r\nexport const UPDATE_USER_STATUS =\r\n  AWS_SERVER_DOMAIN + \"/api/authority/update/user/status\";\r\nexport const SEND_EMAIL = AWS_SERVER_DOMAIN + \"/api/authority/send/email\";\r\nexport const HOST_NAME = \"http://localhost:3000\";\r\nexport const AUTHORITY_CHAT_LOGO = \"https://i.ibb.co/Nry0dDp/image.png\";\r\nexport const ROUTE_ICON_IMAGE =\r\n  \"https://cdn4.iconfinder.com/data/icons/car-accident-2/512/pothole-road-hole-danger-street-accident-512.png\";\r\nexport const ROUTE_ICON_IMAGE_LOW =\r\n  \"https://i.ibb.co/2dzSbjJ/output-onlinepngtools-2.png\";\r\nexport const ROUTE_ICON_IMAGE_MEDIUM =\r\n  \"https://i.ibb.co/RC2LmDh/output-onlinepngtools-1.png\";\r\nexport const ROUTE_ICON_IMAGE_HIGH =\r\n  \"https://i.ibb.co/kMZV43H/output-onlinepngtools.png\";\r\nexport const UA_LOGIN = \"https://nirbhay.me/spothole/404\";\r\n","// this componenet displays all the reports for a\r\n// particular authority's zone on a map. It gives the authority\r\n// the option to select a report from the map itself and update the status or add comments to the report.\r\n// there is an option to toggle between a heat map layer as well.\r\n/*global google*/\r\nimport React from \"react\";\r\nimport axios from \"axios\";\r\nimport { compose, withProps, lifecycle, withStateHandlers } from \"recompose\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  Marker,\r\n  InfoWindow\r\n} from \"react-google-maps\";\r\nimport HeatmapLayer from \"react-google-maps/lib/components/visualization/HeatmapLayer\";\r\nimport {\r\n  GET_GEO_NEAR_REPORTS,\r\n  ROUTE_ICON_IMAGE_HIGH,\r\n  ROUTE_ICON_IMAGE_MEDIUM,\r\n  ROUTE_ICON_IMAGE_LOW\r\n} from \"./../../utility/constants.js\";\r\n\r\nconst MapView = compose(\r\n  withProps({\r\n    googleMapURL:\r\n      \"https://maps.googleapis.com/maps/api/js?key=AIzaSyDZBgT-uZYXzTSkTJbiDcYT4D_XYsS8aUQ&v=3.exp&libraries=geometry,drawing,places,visualization\",\r\n    loadingElement: <div style={{ height: `100%` }} />,\r\n    containerElement: <div style={{ height: `400px` }} />,\r\n    mapElement: <div style={{ height: `100%` }} />\r\n  }),\r\n  withStateHandlers(\r\n    () => ({\r\n      isOpen: false,\r\n      infoIndex: null,\r\n      selectedReports: [],\r\n      heatMapOn: false\r\n    }),\r\n    {\r\n      onToggleOpen: ({ isOpen, infoIndex }) => index => ({\r\n        isOpen: !isOpen,\r\n        infoIndex: index\r\n      }),\r\n      toggleHeatMap: ({ heatMapOn }) => heatOn => ({\r\n        heatMapOn: !heatOn\r\n      })\r\n    }\r\n  ),\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  lifecycle({\r\n    componentDidMount() {\r\n      let self = this;\r\n      axios\r\n        .post(GET_GEO_NEAR_REPORTS, {\r\n          data: {\r\n            authorityId: this.props.authorityId\r\n          }\r\n        })\r\n        .then(response => {\r\n          let heatMapData = response.data.map(report => {\r\n            return {\r\n              location: new google.maps.LatLng(\r\n                report.latitude,\r\n                report.longitude\r\n              ),\r\n              weight: report.severity\r\n            };\r\n          });\r\n          self.setState({\r\n            selectedReports: response.data,\r\n            heatMapData: heatMapData\r\n          });\r\n        })\r\n        .catch(error => {\r\n          console.info(\"Unable to create the region map\");\r\n        });\r\n    }\r\n  })\r\n)(props => {\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant={\"contained\"}\r\n        color={\"primary\"}\r\n        onClick={() => props.toggleHeatMap(props.heatMapOn, props.heatMapData)}\r\n        style={{\r\n          float: \"right\",\r\n          marginTop: \"20px\",\r\n          marginBottom: \"20px\",\r\n          position: \"relative\"\r\n        }}\r\n      >\r\n        Toogle Heat Map Layer\r\n      </Button>\r\n      <GoogleMap\r\n        defaultZoom={14}\r\n        defaultCenter={{\r\n          lat: parseFloat(props.centerLat),\r\n          lng: parseFloat(props.centerLng)\r\n        }}\r\n      >\r\n        {props.selectedReports.map((report, index) => {\r\n          let iconMarkerImage;\r\n          if (parseInt(report.severity) <= 3) {\r\n            iconMarkerImage = ROUTE_ICON_IMAGE_LOW;\r\n          } else if (parseInt(report.severity) <= 6) {\r\n            iconMarkerImage = ROUTE_ICON_IMAGE_MEDIUM;\r\n          } else {\r\n            iconMarkerImage = ROUTE_ICON_IMAGE_HIGH;\r\n          }\r\n          let iconMarker = new window.google.maps.MarkerImage(\r\n            iconMarkerImage,\r\n            null,\r\n            null,\r\n            null,\r\n            new window.google.maps.Size(48, 48)\r\n          );\r\n          return (\r\n            <Marker\r\n              icon={iconMarker}\r\n              key={index}\r\n              position={{\r\n                lat: parseFloat(report.latitude),\r\n                lng: parseFloat(report.longitude)\r\n              }}\r\n              onClick={() => props.onToggleOpen(index)}\r\n            >\r\n              {props.isOpen && props.infoIndex === index && (\r\n                <InfoWindow\r\n                  onCloseClick={props.onToggleOpen}\r\n                  key={index}\r\n                  visible={true}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      marginTop: \"3px\",\r\n                      marginRight: \"3px\"\r\n                    }}\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        color: \"#212121\",\r\n                        paddingRight: \"10px\",\r\n                        paddingBottom: \"10px\",\r\n                        fontWeight: \"bold\",\r\n                        lineHeight: 1.5\r\n                      }}\r\n                    >\r\n                      Reported On: {report.created_date.split(\" \")[0]}\r\n                      <hr style={{ marginTop: \"3px\", marginBottom: \"3px\" }} />\r\n                      Current Status:{\" \"}\r\n                      {report.status.charAt(0).toUpperCase() +\r\n                        report.status.slice(1)}\r\n                      <hr style={{ marginTop: \"3px\", marginBottom: \"3px\" }} />\r\n                      Reported Severity: {report.severity}/10 <br />\r\n                      <br />\r\n                      <Button\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        onClick={() => props.goToReport(report)}\r\n                      >\r\n                        Go to Report\r\n                      </Button>\r\n                    </div>\r\n                    <div>\r\n                      <img\r\n                        src={report.imageURL}\r\n                        width=\"200px\"\r\n                        style={{\r\n                          border: \"2px solid black\",\r\n                          borderRadius: \"10px\",\r\n                          marginRight: \"10px\",\r\n                          marginBottom: \"10px\"\r\n                        }}\r\n                        alt={\"Validated Pothole\"}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </InfoWindow>\r\n              )}\r\n            </Marker>\r\n          );\r\n        })}\r\n        {props.heatMapOn ? (\r\n          <HeatmapLayer\r\n            data={props.heatMapData}\r\n            options={{\r\n              radius: 60,\r\n              opacity: 0.8\r\n            }}\r\n          />\r\n        ) : (\r\n          <HeatmapLayer\r\n            data={props.heatMapData}\r\n            options={{\r\n              radius: 0,\r\n              opacity: 0\r\n            }}\r\n          />\r\n        )}\r\n      </GoogleMap>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MapView;\r\n","// used to edit the severity of a reported pothole\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\n\r\nconst styles = {\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  slider: {\r\n    padding: \"22px 0px\"\r\n  }\r\n};\r\n\r\nclass SeverityIndicator extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      value: this.props.value\r\n    };\r\n  }\r\n  handleChange = (event, value) => {\r\n    this.setState({ value });\r\n    this.props.updateSeverityValue(value);\r\n  };\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Slider\r\n          classes={{ container: classes.slider }}\r\n          value={this.state.value}\r\n          min={1}\r\n          max={10}\r\n          step={1}\r\n          valueLabelDisplay=\"on\"\r\n          onChange={this.handleChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSeverityIndicator.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(SeverityIndicator);\r\n","// this component is used in the detailed report\r\n// section. acts as a label to each major component\r\n// in the same.\r\nimport React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nconst HeaderTextCard = props => {\r\n  return (\r\n    <Typography\r\n      gutterBottom\r\n      style={{ marginBottom: props.marginBottom, color: props.color }}\r\n    >\r\n      <b>\r\n        {props.text} &nbsp;\r\n        {props.editIcon && (\r\n          <EditIcon style={{ marginTop: \"-5px\" }} fontSize={\"small\"} />\r\n        )}\r\n      </b>\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default HeaderTextCard;\r\n","// this component is the text area field used in the\r\n// comments sections and the new report section.\r\n// it requires a function as prop to get the\r\n// updated value of the description box.\r\n// also has built-in error validation\r\nimport React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nclass DescriptionBox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorRequired: false,\r\n      content: \"\"\r\n    };\r\n    this.textFieldRef = React.createRef();\r\n    props.passMakeEmpty(this.makeEmpty);\r\n  }\r\n\r\n  makeEmpty = () => {\r\n    this.setState({\r\n      content: \"\"\r\n    });\r\n    this.checkRequired(this.textFieldRef.current, \"required\");\r\n  };\r\n\r\n  checkRequired = (target, errorRequired) => {\r\n    let descriptionValue = target.value.trim();\r\n    if (descriptionValue !== \"\") {\r\n      this.setState({\r\n        errorRequired: false,\r\n        content: target.value\r\n      });\r\n    } else {\r\n      this.setState({\r\n        errorRequired: errorRequired === undefined ? true : false,\r\n        content: target.value\r\n      });\r\n    }\r\n    this.props.updateDescription(descriptionValue);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Typography\r\n          style={{ marginBottom: \"10px\", marginTop: \"5px\" }}\r\n          gutterBottom\r\n        >\r\n          Add Comment\r\n        </Typography>\r\n        <TextField\r\n          inputRef={this.textFieldRef}\r\n          error={this.state.errorRequired}\r\n          onChange={event => this.checkRequired(event.target)}\r\n          required\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          placeholder=\"Comments on the report/update\"\r\n          multiline\r\n          rows={4}\r\n          rowsMax={50}\r\n          label={\"Additional Comments (Required)\"}\r\n          value={this.state.content}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DescriptionBox;\r\n","// contains the chat message component\r\n// uses the mui treasury library for displaying the message array\r\nimport React from \"react\";\r\nimport ChatMsg from \"@mui-treasury/components/chatMsg/ChatMsg\";\r\n\r\nconst ChatMessage = props => (\r\n  <div style={{ color: \"#333\" }}>\r\n    <ChatMsg\r\n      avatar={props.profileURL}\r\n      side={props.side}\r\n      messages={props.messageArray}\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default ChatMessage;\r\n","// is a status selector component for the authority\r\n// used to updated the report status.\r\n// (options are dynamically generated using current status of the report)\r\nimport React from \"react\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\n\r\nconst optionsArray = [\r\n  \"Submitted\",\r\n  \"Approved\",\r\n  \"Working\",\r\n  \"Completed\",\r\n  \"Cancelled\"\r\n];\r\n\r\nclass StatusSelect extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let value = this.capitalize(props.value);\r\n    this.state = {\r\n      value: value,\r\n      options: this.mapOptions(value)\r\n    };\r\n  }\r\n\r\n  mapOptions = value => {\r\n    let indexToSplitOn = optionsArray.indexOf(value);\r\n    let optionsArrayCopy = optionsArray.slice();\r\n    return optionsArrayCopy.splice(indexToSplitOn);\r\n  };\r\n\r\n  handleChange = event => {\r\n    const selectedValue = event.target.value;\r\n    this.setState({\r\n      value: selectedValue\r\n    });\r\n    this.props.updateSelectedValue(selectedValue);\r\n  };\r\n\r\n  capitalize = str => {\r\n    str = str.split(\" \");\r\n\r\n    for (let i = 0, x = str.length; i < x; i++) {\r\n      str[i] = str[i][0].toUpperCase() + str[i].substr(1);\r\n    }\r\n\r\n    return str.join(\" \");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <FormControl variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Status</InputLabel>\r\n        <Select\r\n          fullWidth={true}\r\n          native\r\n          onChange={this.handleChange}\r\n          label=\"Report Status\"\r\n        >\r\n          {this.state.options.map((optionValue, index) => (\r\n            <option value={optionValue}>{optionValue}</option>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StatusSelect;\r\n","// this component is used to display the detailed results of\r\n// a report. it appears after clicking on a report in the\r\n// dashboard section.\r\nimport React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport EventIcon from \"@material-ui/icons/Event\";\r\nimport PinDropIcon from \"@material-ui/icons/PinDrop\";\r\nimport SeverityIndicator from \"./../severity_indicator\";\r\nimport HeaderTextCard from \"./../header_text_card\";\r\nimport Comments from \"./../comments\";\r\nimport \"./css/modal_data_card.css\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport StatusSelect from \"./../status_select\";\r\nimport AlertDialogWithComment from \"./../alert_comment\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 700,\r\n    margin: \"0 auto\"\r\n  },\r\n  media: {\r\n    height: 140\r\n  },\r\n  mediaMap: {\r\n    height: 200\r\n  },\r\n  headerTextColor: {\r\n    color: \"white\"\r\n  }\r\n});\r\n\r\nexport default function DetailedDataCard(props) {\r\n  let [dialogOpenState, updateCloseDialogState] = React.useState(false);\r\n  let [statusValue, updateStatusValue] = React.useState(props.data.status);\r\n  let [severityValue, updateSeverityValue] = React.useState(\r\n    props.data.severity\r\n  );\r\n\r\n  let handleUpdateClick = () => {\r\n    updateCloseDialogState(true);\r\n  };\r\n  const classes = useStyles();\r\n  const mapImageURL =\r\n    \"https://maps.googleapis.com/maps/api/staticmap?size=512x512&format=png&style=feature:road.highway%7Celement:geometry%7Cvisibility:simplified%7Ccolor:0xc280e9&style=feature:transit.line%7Cvisibility:simplified%7Ccolor:0xbababa&style=feature:road.highway%7Celement:labels.text.stroke%7Cvisibility:on%7Ccolor:0xb06eba&style=feature:road.highway%7Celement:labels.text.fill%7Cvisibility:on%7Ccolor:0xffffff&visible=\" +\r\n    props.data.latitude +\r\n    \",\" +\r\n    props.data.longitude +\r\n    \"&markers=color:red%7Clabel:A%7C\" +\r\n    props.data.latitude +\r\n    \",\" +\r\n    props.data.longitude +\r\n    \"&key=AIzaSyDZBgT-uZYXzTSkTJbiDcYT4D_XYsS8aUQ&zoom=15\";\r\n\r\n  return (\r\n    <Card\r\n      style={{ border: \"2px solid rgba(255,255,255,0.1)\" }}\r\n      className={classes.root}\r\n    >\r\n      <CardMedia className={classes.media} image={props.data.imageURL} />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {/* for the name component*/}\r\n          <HeaderTextCard\r\n            text=\"Reported By\"\r\n            marginBottom=\"12px\"\r\n            color={classes.headerTextColor.color}\r\n          />\r\n          <Typography gutterBottom>\r\n            <div>\r\n              <Avatar\r\n                alt={props.data.profileName}\r\n                src={props.data.profileURL}\r\n                style={{ display: \"inline-block\", verticalAlign: \"middle\" }}\r\n              />\r\n              <div\r\n                style={{\r\n                  display: \"inline-block\",\r\n                  position: \"relative\",\r\n                  top: \"3px\"\r\n                }}\r\n              >\r\n                &nbsp; &nbsp; {props.data.profileName}\r\n              </div>\r\n            </div>\r\n          </Typography>\r\n          <br />\r\n\r\n          {/* for the date time component*/}\r\n          <Typography gutterBottom>\r\n            <EventIcon />\r\n            &nbsp; &nbsp; {props.data.dateTime.split(\",\")[0]}\r\n          </Typography>\r\n\r\n          <br />\r\n          {/* for the address component*/}\r\n          <Typography gutterBottom>\r\n            <PinDropIcon />\r\n            &nbsp; &nbsp; {props.data.location}\r\n          </Typography>\r\n\r\n          <br />\r\n          {/* for the severity update component*/}\r\n          <HeaderTextCard\r\n            text={\"Severity Rate\"}\r\n            editIcon={true}\r\n            marginBottom=\"40px\"\r\n            color={classes.headerTextColor.color}\r\n          />\r\n          <SeverityIndicator\r\n            updateSeverityValue={updateSeverityValue}\r\n            value={props.data.severity}\r\n          />\r\n\r\n          <br />\r\n          {/* for the status update component*/}\r\n          <HeaderTextCard\r\n            text=\"Report Status\"\r\n            editIcon={true}\r\n            marginBottom=\"30px\"\r\n            color={classes.headerTextColor.color}\r\n          />\r\n          <StatusSelect\r\n            value={props.data.status}\r\n            updateSelectedValue={updateStatusValue}\r\n          />\r\n          <br />\r\n          <br />\r\n\r\n          {/* for the update changes button*/}\r\n          <div>\r\n            <Button\r\n              onClick={() => handleUpdateClick()}\r\n              color=\"primary\"\r\n              style={{ fontSize: \"15px\", fontWeight: \"bold\" }}\r\n            >\r\n              Make Updates\r\n            </Button>\r\n            <AlertDialogWithComment\r\n              dialogOpenState={dialogOpenState}\r\n              updateCloseDialogState={updateCloseDialogState}\r\n              title={\"Are you sure you want to update?\"}\r\n              content={\"Please provide feedback supporting your updates\"}\r\n              buttonText={\"Close\"}\r\n              color={\"primary\"}\r\n              updatedStatus={statusValue}\r\n              updatedSeverity={severityValue}\r\n              caseId={props.data.caseNumber}\r\n              mailToProfileName={props.data.profileName}\r\n              mailToProfileEmail={props.data.profileEmail}\r\n            />\r\n          </div>\r\n\r\n          {/* for the complaint description component*/}\r\n          <p style={{ marginTop: \"20px\", textAlign: \"justify\" }}>\r\n            <hr style={{ backgroundColor: \"rgba(255, 255, 255, 0.1)\" }} />\r\n            <HeaderTextCard\r\n              text=\"Complaint Description\"\r\n              marginBottom=\"15px\"\r\n              color={classes.headerTextColor.color}\r\n            />\r\n            {props.data.description}\r\n          </p>\r\n          <br />\r\n          <CardMedia className={classes.mediaMap} image={mapImageURL} />\r\n          <br />\r\n          <hr style={{ backgroundColor: \"rgba(255, 255, 255, 0.1)\" }} />\r\n\r\n          {/* for the comments section */}\r\n          <HeaderTextCard\r\n            text=\"Comments\"\r\n            marginBottom=\"15px\"\r\n            color={classes.headerTextColor.color}\r\n          />\r\n          <Comments\r\n            caseNumber={props.data.caseNumber}\r\n            profileURL={props.data.profileURL}\r\n          />\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","// this component is the modal which appears on clicking\r\n// a report in the dashboard screen. it comprises\r\n// of the card for showing all the details of the report\r\n// and allows editing for it too.\r\nimport React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport DetailedDataCard from \"./../modal_data_card\";\r\n\r\nexport default function DetailedDataModal(props) {\r\n  const [open, setOpen] = React.useState(true);\r\n  const scroll = \"paper\";\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"xl\"));\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const descriptionElementRef = React.useRef(null);\r\n  React.useEffect(() => {\r\n    if (open) {\r\n      const { current: descriptionElement } = descriptionElementRef;\r\n      if (descriptionElement !== null) {\r\n        descriptionElement.focus();\r\n      }\r\n    }\r\n  }, [open]);\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        scroll={scroll}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n        fullScreen={fullScreen}\r\n      >\r\n        <DialogTitle id=\"scroll-dialog-title\" style={{ textAlign: \"center\" }}>\r\n          Report # {props.caseNumber}\r\n        </DialogTitle>\r\n        <DialogContent dividers={scroll === \"paper\"}>\r\n          <DetailedDataCard data={props} />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","// this componenet displays all the reports for a\r\n// particular authority's zone on a map. It gives the authority\r\n// the option to select a report from the map itself and update the status or add comments to the report.\r\n// there is an option to toggle between a heat map layer as well.\r\n// the screen also display's the authority's details and shows a legend for the map\r\nimport React from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport MapView from \"./../../components/region_view\";\r\nimport DetailedDataModal from \"./../../components/detailed_data_modal\";\r\nimport {\r\n  GET_AUTHORITY_PROFILE,\r\n  GET_GEO_NEAR_REPORTS,\r\n  ROUTE_ICON_IMAGE_HIGH,\r\n  ROUTE_ICON_IMAGE_MEDIUM,\r\n  ROUTE_ICON_IMAGE_LOW\r\n} from \"./../../utility/constants.js\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TrendingUpIcon from \"@material-ui/icons/TrendingUp\";\r\n\r\nconst styles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  paper: {\r\n    padding: \"20px\",\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary\r\n  }\r\n}));\r\n\r\nlet self;\r\nclass MapRegionView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mapView: \"\",\r\n      detailedDataModal: \"\",\r\n      authorityAddress: \"\",\r\n      authorityName: \"\",\r\n      dataCounter: 0\r\n    };\r\n    self = this;\r\n    this.updateDataCounter();\r\n    axios\r\n      .post(GET_AUTHORITY_PROFILE, {\r\n        data: {\r\n          authorityId: this.props.authorityId\r\n        }\r\n      })\r\n      .then(response => {\r\n        let heatMapData = [];\r\n        self.setState({\r\n          authorityAddress: response.data[0].address,\r\n          authorityName: response.data[0].name,\r\n          mapView: (\r\n            <div>\r\n              <MapView\r\n                authorityId={this.props.authorityId}\r\n                centerLat={response.data[0].latitude}\r\n                centerLng={response.data[0].longitude}\r\n                goToReport={this.goToReport}\r\n                heatMapData={heatMapData}\r\n              />\r\n            </div>\r\n          )\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.info(\"Cannot read authority profile data\");\r\n      });\r\n  }\r\n\r\n  updateDataCounter = () => {\r\n    axios\r\n      .post(GET_GEO_NEAR_REPORTS, {\r\n        data: {\r\n          authorityId: this.props.authorityId\r\n        }\r\n      })\r\n      .then(response => {\r\n        self.setState({\r\n          dataCounter: response.data.length\r\n        });\r\n      });\r\n  };\r\n\r\n  goToReport = paramData => {\r\n    this.setState(\r\n      {\r\n        detailedDataModal: \"\"\r\n      },\r\n      () => {\r\n        this.setState({\r\n          detailedDataModal: (\r\n            <DetailedDataModal\r\n              imageURL={paramData.imageURL}\r\n              dateTime={this.formatDate(paramData.created_date)}\r\n              location={paramData.location}\r\n              description={paramData.description}\r\n              severity={paramData.severity}\r\n              caseNumber={paramData.case_id}\r\n              latitude={paramData.latitude}\r\n              longitude={paramData.longitude}\r\n              profileURL={paramData.user_photo_url}\r\n              profileName={this.capitalize(paramData.user_full_name)}\r\n              status={this.capitalize(paramData.status)}\r\n              profileEmail={paramData.user_email}\r\n            />\r\n          )\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  formatDate = date => {\r\n    return new Date(Date.parse(date)).toLocaleString();\r\n  };\r\n\r\n  capitalize = str => {\r\n    str = str.split(\" \");\r\n\r\n    for (let i = 0, x = str.length; i < x; i++) {\r\n      str[i] = str[i][0].toUpperCase() + str[i].substr(1);\r\n    }\r\n\r\n    return str.join(\" \");\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div style={{ marginTop: \"100px\" }}>\r\n        <Container>\r\n          <Typography\r\n            gutterBottom\r\n            style={{ textAlign: \"center\", fontSize: \"2.7em\" }}\r\n          >\r\n            Track and Update&nbsp;\r\n            <TrendingUpIcon style={{ fontSize: 50 }} color={\"primary\"} />{\" \"}\r\n            Reports with Ease\r\n          </Typography>\r\n          <div>\r\n            <center>\r\n              <Typography\r\n                variant=\"body2\"\r\n                color=\"textSecondary\"\r\n                component=\"p\"\r\n                style={{\r\n                  textAlign: \"center\",\r\n                  fontSize: \"1.5em\",\r\n                  maxWidth: \"600px\"\r\n                }}\r\n              >\r\n                View potholes reported in your region differentiated using the\r\n                given legend. Click on any pothole marker to view it's details\r\n                or update it with the press of a single button.\r\n              </Typography>\r\n            </center>\r\n          </div>\r\n        </Container>\r\n        {this.state.dataCounter === 0 && (\r\n          <div\r\n            style={{\r\n              textAlign: \"center\",\r\n              fontWeight: \"bold\",\r\n              fontSize: \"24px\",\r\n              marginTop: \"150px\",\r\n              color: \"#333\"\r\n            }}\r\n          >\r\n            {\" \"}\r\n            No Reports in your Zone yet. <br /> You can keep Monitoring this\r\n            page for <br /> New Reports and to Manage them through a Map View.\r\n          </div>\r\n        )}\r\n        {this.state.dataCounter !== 0 && (\r\n          <div>\r\n            <Container>\r\n              <Grid style={{ marginTop: \"50px\" }} container spacing={3}>\r\n                <Grid item sm={6} xs={12}>\r\n                  <Paper style={{ padding: \"20px\", height: \"200px\" }}>\r\n                    <h3>Authority Details</h3>\r\n                    <br />\r\n                    <h6 style={{ color: \"grey\" }}>Name</h6>\r\n                    <h6>{this.state.authorityName}</h6>\r\n                    <h6 style={{ color: \"grey\" }}>Address</h6>\r\n                    <h6>{this.state.authorityAddress}</h6>\r\n                  </Paper>\r\n                </Grid>\r\n                <Grid item sm={6} xs={12}>\r\n                  <Paper style={{ padding: \"20px\", height: \"200px\" }}>\r\n                    <h3>Map Legend [Severity]</h3>\r\n                    <br />\r\n                    <br />\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"start\"\r\n                      }}\r\n                    >\r\n                      <div>\r\n                        <center>\r\n                          <Avatar\r\n                            variant={\"rounded\"}\r\n                            alt=\"High\"\r\n                            src={ROUTE_ICON_IMAGE_HIGH}\r\n                            className={classes.large}\r\n                          />\r\n                          <h5>High</h5>\r\n                        </center>\r\n                      </div>\r\n                      <div style={{ marginLeft: \"40px\", marginRight: \"40px\" }}>\r\n                        <center>\r\n                          <Avatar\r\n                            variant={\"rounded\"}\r\n                            alt=\"Medium\"\r\n                            src={ROUTE_ICON_IMAGE_MEDIUM}\r\n                            className={classes.large}\r\n                          />\r\n                          <h5>Medium</h5>\r\n                        </center>\r\n                      </div>\r\n                      <div>\r\n                        <center>\r\n                          <Avatar\r\n                            variant={\"rounded\"}\r\n                            alt=\"Low\"\r\n                            src={ROUTE_ICON_IMAGE_LOW}\r\n                            className={classes.large}\r\n                          />\r\n                          <h5>Low</h5>\r\n                        </center>\r\n                      </div>\r\n                    </div>\r\n                  </Paper>\r\n                </Grid>\r\n              </Grid>\r\n            </Container>\r\n            <br />\r\n            <Container>\r\n              <div style={{ border: \"2px SOLID #2997F7\", borderRadius: \"5px\" }}>\r\n                {this.state.mapView}\r\n              </div>\r\n            </Container>\r\n            {this.state.detailedDataModal}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(MapRegionView);\r\n","// this is the main dashboard in the authority's app\r\n// has an analytics section and a datatable section\r\n// the analytics section contains two components (pie and stacked bar charts)\r\n// the pie chart represents the status wise distribution of reports\r\n// the bar chart represents the status and severity wise distribution of reports\r\n// the datatable shows all the reports in the authority's region which are queried\r\n// using a geo near operation in the database\r\n// on clicking a row in the datatable the authority has\r\n// the option to update its status or make comments on the report\r\n// on updating the status an email notification is sent out to the users too\r\nimport React from \"react\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport axios from \"axios\";\r\nimport { GET_GEO_NEAR_REPORTS } from \"./../../utility/constants.js\";\r\nimport DetailedDataModal from \"./../../components/detailed_data_modal\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport PieChartBlock from \"./../../components/pie_chart\";\r\nimport BarChartBlock from \"../../components/bar_chart\";\r\nimport {\r\n  makeStyles,\r\n  withStyles,\r\n  createMuiTheme,\r\n  MuiThemeProvider\r\n} from \"@material-ui/core/styles\";\r\n\r\nlet self;\r\n/*\r\nconst styles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary\r\n  }\r\n}));*/\r\n\r\nlet getMuiTheme = () =>\r\n  createMuiTheme({\r\n    palette: { type: \"dark\" },\r\n    overrides: {\r\n      MuiTableRow: {\r\n        root: {\r\n          cursor: \"pointer\"\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\nclass Dashboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      reportsDataTable: \"\",\r\n      dataModal: \"\",\r\n      completeData: []\r\n    };\r\n\r\n    self = this;\r\n\r\n    axios\r\n      .post(GET_GEO_NEAR_REPORTS, {\r\n        data: {\r\n          authorityId: this.props.authorityId\r\n        }\r\n      })\r\n      .then(response => {\r\n        console.log(response.data, \"ro2\");\r\n        if (response.data.length > 0) {\r\n          let data = response.data;\r\n          self.setState({\r\n            completeData: data\r\n          });\r\n          let formattedData = data.map(report => {\r\n            let formattedReport = {};\r\n            formattedReport[\"Case Id\"] = report.case_id;\r\n            formattedReport[\"Location\"] = this.capitalize(report.location);\r\n            formattedReport[\"Severity\"] = report.severity;\r\n            formattedReport[\"Status\"] = this.capitalize(report.status);\r\n            formattedReport[\"Report Date\"] = this.formatDate(\r\n              report.created_date\r\n            ).split(\",\")[0];\r\n            formattedReport[\"Reporter Name\"] = this.capitalize(\r\n              report.user_full_name\r\n            );\r\n            return formattedReport;\r\n          });\r\n          let columns = Object.keys(formattedData[0]);\r\n          const options = {\r\n            filterType: \"checkbox\",\r\n            selectableRows: \"none\",\r\n            onRowClick: (rowData, rowState) => {\r\n              let paramData = data[rowState.dataIndex];\r\n              self.setState(\r\n                {\r\n                  dataModal: \"\"\r\n                },\r\n                () => {\r\n                  // self.setState({\r\n                  //   dataModal: (\r\n                  //     <DetailedDataModal\r\n                  //       imageURL={paramData.imageURL}\r\n                  //       dateTime={this.formatDate(paramData.created_date)}\r\n                  //       location={paramData.location}\r\n                  //       description={paramData.description}\r\n                  //       severity={paramData.severity}\r\n                  //       caseNumber={paramData.case_id}\r\n                  //       latitude={paramData.latitude}\r\n                  //       longitude={paramData.longitude}\r\n                  //       profileURL={paramData.user_photo_url}\r\n                  //       profileName={this.capitalize(paramData.user_full_name)}\r\n                  //       status={this.capitalize(paramData.status)}\r\n                  //       profileEmail={paramData.user_email}\r\n                  //     />\r\n                  //   )\r\n                  // });\r\n                }\r\n              );\r\n            }\r\n          };\r\n          self.setState({\r\n            /*reportsDataTable: (\r\n              <MuiThemeProvider theme={getMuiTheme()}>\r\n                <MUIDataTable\r\n                  title={\"Zone Reports\"}\r\n                  data={formattedData}\r\n                  columns={columns}\r\n                  options={options}\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n              </MuiThemeProvider>\r\n            )*/\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  formatDate = date => {\r\n    return new Date(Date.parse(date)).toLocaleString();\r\n  };\r\n\r\n  capitalize = str => {\r\n    str = str.split(\" \");\r\n\r\n    for (let i = 0, x = str.length; i < x; i++) {\r\n      str[i] = str[i][0].toUpperCase() + str[i].substr(1);\r\n    }\r\n\r\n    return str.join(\" \");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.completeData.length === 0 && (\r\n          <div\r\n            style={{\r\n              textAlign: \"center\",\r\n              fontWeight: \"bold\",\r\n              fontSize: \"24px\",\r\n              marginTop: \"150px\",\r\n              color: \"#333\"\r\n            }}\r\n          >\r\n            {\" \"}\r\n            No Reports in your Zone yet. <br /> You can keep monitoring this\r\n            page <br /> for new Reports\r\n          </div>\r\n        )}\r\n        {/* {this.state.completeData.length !== 0 && (\r\n          <div>\r\n            <Container>\r\n              <Grid style={{ marginTop: \"100px\" }} container spacing={3}>\r\n                <Grid item sm={5}>\r\n                  <Paper>\r\n                    <PieChartBlock data={this.state.completeData} />\r\n                  </Paper>\r\n                </Grid>\r\n                <Grid item sm={7}>\r\n                  <Paper>\r\n                    <BarChartBlock data={this.state.completeData} />\r\n                  </Paper>\r\n                </Grid>\r\n              </Grid>\r\n            </Container>\r\n            <Container style={{ marginTop: \"50px\" }}>\r\n              {this.state.reportsDataTable} \r\n              {this.state.dataModal} \r\n            </Container>\r\n          </div>\r\n        )} */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","// this is the profile screen. it displys the main email photo URL for the\r\n// signed in authority\r\n// shows the number of cancelled, approved, working, pending and completed reports.\r\n// has separate indicators for the same.\r\nimport React from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport axios from \"axios\";\r\nimport {\r\n  GET_GEO_NEAR_REPORTS,\r\n  GET_AUTHORITY_PROFILE\r\n} from \"./../../utility/constants.js\";\r\nimport HeaderTextCard from \"./../../components/header_text_card\";\r\nimport PinDropIcon from \"@material-ui/icons/PinDrop\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nclass Profile extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pendingCount: 0,\r\n      cancelledCount: 0,\r\n      approvedCount: 0,\r\n      completedCount: 0,\r\n      inProgressCount: 0,\r\n      address: \"\"\r\n    };\r\n    axios\r\n      .post(GET_GEO_NEAR_REPORTS, {\r\n        data: {\r\n          authorityId: this.props.authorityId\r\n        }\r\n      })\r\n      .then(res => {\r\n        let completedCount = res.data.filter(report => {\r\n          return report.status === \"completed\";\r\n        }).length;\r\n        let cancelledCount = res.data.filter(report => {\r\n          return report.status === \"cancelled\";\r\n        }).length;\r\n        let inProgressCount = res.data.filter(report => {\r\n          return report.status === \"working\";\r\n        }).length;\r\n        let pendingCount = res.data.filter(report => {\r\n          return report.status === \"submitted\";\r\n        }).length;\r\n        let approvedCount =\r\n          res.data.filter(report => {\r\n            return report.status === \"approved\";\r\n          }).length +\r\n          inProgressCount +\r\n          completedCount;\r\n        this.setState({\r\n          cancelledCount: cancelledCount,\r\n          approvedCount: approvedCount,\r\n          completedCount: completedCount,\r\n          inProgressCount: inProgressCount,\r\n          pendingCount: pendingCount\r\n        });\r\n      });\r\n    axios\r\n      .post(GET_AUTHORITY_PROFILE, {\r\n        data: {\r\n          authorityId: this.props.authorityId\r\n        }\r\n      })\r\n      .then(response => {\r\n        this.setState({\r\n          address: response.data[0].address\r\n        });\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <center>\r\n          <Card\r\n            style={{\r\n              marginTop: \"125px\",\r\n              borderRadius: 12,\r\n              minWidth: 256,\r\n              maxWidth: 500,\r\n              textAlign: \"center\",\r\n              marginLeft: \"50px\",\r\n              marginRight: \"50px\"\r\n            }}\r\n          >\r\n            <CardContent>\r\n              <Avatar\r\n                style={{\r\n                  width: 120,\r\n                  height: 120,\r\n                  margin: \"auto\",\r\n                  marginTop: \"15px\",\r\n                  marginBottom: \"15px\"\r\n                }}\r\n                src={this.props.photoURL}\r\n              />\r\n              <h3\r\n                style={{\r\n                  fontSize: 18,\r\n                  fontWeight: \"bold\",\r\n                  letterSpacing: \"0.5px\",\r\n                  marginTop: 8,\r\n                  marginBottom: 0\r\n                }}\r\n              >\r\n                {this.props.name}\r\n              </h3>\r\n              <span>\r\n                <Link\r\n                  style={{\r\n                    fontSize: 14,\r\n                    marginBottom: \"1em\",\r\n                    fontWeight: \"bold\"\r\n                  }}\r\n                  href={\"mailto:\" + this.props.email}\r\n                >\r\n                  {this.props.email}\r\n                </Link>\r\n              </span>\r\n              <span\r\n                style={{\r\n                  fontSize: 14,\r\n                  color: \"white\",\r\n                  marginTop: \"1em\",\r\n                  fontWeight: \"bold\",\r\n                  letterSpacing: \"0.5px\"\r\n                }}\r\n              >\r\n                <br />\r\n                <br />\r\n                <PinDropIcon />\r\n                &nbsp; {this.state.address}\r\n              </span>\r\n            </CardContent>\r\n            <Divider variant=\"middle\" />\r\n            <br />\r\n            <HeaderTextCard text=\"Status Statistics\" />\r\n            <Box\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                marginRight: \"100px\",\r\n                marginLeft: \"100px\"\r\n              }}\r\n            >\r\n              <Box p={2} flex={\"auto\"}>\r\n                <p\r\n                  style={{\r\n                    fontSize: 12,\r\n                    color: \"#9e9e9e\",\r\n                    fontWeight: 500,\r\n                    fontFamily:\r\n                      '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\r\n                    margin: 0\r\n                  }}\r\n                >\r\n                  Pending\r\n                </p>\r\n                <p\r\n                  style={{\r\n                    fontSize: 20,\r\n                    fontWeight: \"bold\",\r\n                    marginBottom: 4,\r\n                    letterSpacing: \"1px\"\r\n                  }}\r\n                >\r\n                  {this.state.pendingCount}\r\n                </p>\r\n              </Box>\r\n              <Box p={2} flex={\"auto\"}>\r\n                <p\r\n                  style={{\r\n                    fontSize: 12,\r\n                    color: \"#9e9e9e\",\r\n                    fontWeight: 500,\r\n                    fontFamily:\r\n                      '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\r\n                    margin: 0\r\n                  }}\r\n                >\r\n                  Approved\r\n                </p>\r\n                <p\r\n                  style={{\r\n                    fontSize: 20,\r\n                    fontWeight: \"bold\",\r\n                    marginBottom: 4,\r\n                    letterSpacing: \"1px\"\r\n                  }}\r\n                >\r\n                  {this.state.approvedCount}\r\n                </p>\r\n              </Box>\r\n            </Box>\r\n            <Box display={\"flex\"}>\r\n              <Box p={2} flex={\"auto\"}>\r\n                <p\r\n                  style={{\r\n                    fontSize: 12,\r\n                    color: \"#9e9e9e\",\r\n                    fontWeight: 500,\r\n                    fontFamily:\r\n                      '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\r\n                    margin: 0\r\n                  }}\r\n                >\r\n                  In Progress\r\n                </p>\r\n                <p\r\n                  style={{\r\n                    fontSize: 20,\r\n                    fontWeight: \"bold\",\r\n                    marginBottom: 4,\r\n                    letterSpacing: \"1px\"\r\n                  }}\r\n                >\r\n                  {this.state.inProgressCount}\r\n                </p>\r\n              </Box>\r\n              <Box p={2} flex={\"auto\"}>\r\n                <p\r\n                  style={{\r\n                    fontSize: 12,\r\n                    color: \"#9e9e9e\",\r\n                    fontWeight: 500,\r\n                    fontFamily:\r\n                      '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\r\n                    margin: 0\r\n                  }}\r\n                >\r\n                  Completed\r\n                </p>\r\n                <p\r\n                  style={{\r\n                    fontSize: 20,\r\n                    fontWeight: \"bold\",\r\n                    marginBottom: 4,\r\n                    letterSpacing: \"1px\"\r\n                  }}\r\n                >\r\n                  {this.state.completedCount}\r\n                </p>\r\n              </Box>\r\n              <Box p={2} flex={\"auto\"}>\r\n                <p\r\n                  style={{\r\n                    fontSize: 12,\r\n                    color: \"#9e9e9e\",\r\n                    fontWeight: 500,\r\n                    fontFamily:\r\n                      '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\r\n                    margin: 0\r\n                  }}\r\n                >\r\n                  Cancelled\r\n                </p>\r\n                <p\r\n                  style={{\r\n                    fontSize: 20,\r\n                    fontWeight: \"bold\",\r\n                    marginBottom: 4,\r\n                    letterSpacing: \"1px\"\r\n                  }}\r\n                >\r\n                  {this.state.cancelledCount}\r\n                </p>\r\n              </Box>\r\n            </Box>\r\n            <div\r\n              style={{\r\n                marginLeft: \"20px\",\r\n                marginRight: \"20px\",\r\n                marginTop: \"20px\"\r\n              }}\r\n            ></div>\r\n          </Card>\r\n        </center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","// for the pie chart component in the\r\n// analytics section on the dashboard\r\nimport React, { PureComponent } from \"react\";\r\nimport { PieChart, Pie, Tooltip, Cell, Legend } from \"recharts\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst styles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    maxWidth: 400\r\n  },\r\n  title: {\r\n    fontSize: 14\r\n  },\r\n  pos: {\r\n    marginBottom: 12\r\n  }\r\n});\r\n\r\nconst COLORS = [\"#4285F4\", \"#34A853\", \"#FBBC05\", \"#990099\", \"#EA4335\"];\r\n\r\nclass PieChartBlock extends PureComponent {\r\n  makeData = data => {\r\n    // intermediate data\r\n    let madeData = {};\r\n    data.forEach(report => {\r\n      if (madeData[report.status] === undefined) {\r\n        madeData[report.status] = 1;\r\n      } else {\r\n        madeData[report.status] += 1;\r\n      }\r\n    });\r\n\r\n    // pieData\r\n    let pieData = [\r\n      { name: \"Submitted\", value: madeData[\"submitted\"] || 0 },\r\n      { name: \"Approved\", value: madeData[\"approved\"] || 0 },\r\n      { name: \"Working\", value: madeData[\"working\"] || 0 },\r\n      { name: \"Completed\", value: madeData[\"completed\"] || 0 },\r\n      { name: \"Cancelled\", value: madeData[\"cancelled\"] || 0 }\r\n    ];\r\n    return pieData;\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    let dataToUse = this.makeData(this.props.data);\r\n\r\n    return (\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <Typography\r\n            className={classes.title}\r\n            color=\"textSecondary\"\r\n            gutterBottom\r\n          >\r\n            Statistics\r\n          </Typography>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n            Current Report Status\r\n          </Typography>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            <PieChart width={400} height={400}>\r\n              <Pie\r\n                dataKey=\"value\"\r\n                isAnimationActive={true}\r\n                data={dataToUse}\r\n                cx={200}\r\n                cy={200}\r\n                outerRadius={80}\r\n                label\r\n                innerRadius={60}\r\n                paddingAngle={5}\r\n              >\r\n                {dataToUse.map((entry, index) => (\r\n                  <Cell\r\n                    stroke={COLORS[index % COLORS.length]}\r\n                    fill={COLORS[index % COLORS.length]}\r\n                  />\r\n                ))}\r\n              </Pie>\r\n              <Tooltip />\r\n              <Legend />\r\n            </PieChart>\r\n            <br />\r\n            {'\"region and severity wise status summary\"'}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(PieChartBlock);\r\n","// bar chart component for the\r\n// analytics section in the dashboard\r\nimport React, { PureComponent } from \"react\";\r\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, Legend } from \"recharts\";\r\n\r\nclass BarChartBlock extends PureComponent {\r\n  makeData = data => {\r\n    let madeData = {};\r\n    for (let counter = 1; counter <= 10; counter++) {\r\n      madeData[counter] = {\r\n        name: \"Sev \" + counter,\r\n        submitted: 0,\r\n        approved: 0,\r\n        working: 0,\r\n        completed: 0,\r\n        cancelled: 0\r\n      };\r\n    }\r\n    data.forEach(report => {\r\n      madeData[report.severity][report.status] += 1;\r\n    });\r\n    return Object.values(madeData);\r\n  };\r\n  render() {\r\n    const screenWidth =\r\n      window.innerWidth < 500 ? window.innerWidth - 75 : window.innerWidth / 3;\r\n    let dataToUse = this.makeData(this.props.data);\r\n    return (\r\n      <div>\r\n        <BarChart\r\n          width={screenWidth}\r\n          height={542}\r\n          data={dataToUse}\r\n          margin={{\r\n            top: 20,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5\r\n          }}\r\n        >\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Bar dataKey=\"submitted\" stackId=\"a\" fill=\"#4285F4\" />\r\n          <Bar dataKey=\"approved\" stackId=\"a\" fill=\"#34A853\" />\r\n          <Bar dataKey=\"working\" stackId=\"a\" fill=\"#FBBC05\" />\r\n          <Bar dataKey=\"completed\" stackId=\"a\" fill=\"#990099\" />\r\n          <Bar dataKey=\"cancelled\" stackId=\"a\" fill=\"#EA4335\" />\r\n        </BarChart>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BarChartBlock;\r\n","// alert dialog accepts both single button (ok type) and\r\n// dual button (ok and cancel) type options.\r\n// is used for updating user status (allow / block)\r\nimport React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default class AlertDialog extends React.Component {\r\n  handleClose = () => {\r\n    this.props.updateUserStatus();\r\n  };\r\n\r\n  justClose = () => {\r\n    this.props.updateCloseDialogState();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={this.props.dialogOpenState}\r\n          onClose={() => this.justClose()}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{this.props.title}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              {this.props.content}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={() => this.handleClose()}\r\n              color={this.props.color}\r\n              autoFocus\r\n            >\r\n              {this.props.buttonText}\r\n            </Button>\r\n            {this.props.linkTo !== undefined && (\r\n              <Button\r\n                onClick={() => this.justClose()}\r\n                color={\"primary\"}\r\n                autoFocus\r\n              >\r\n                No\r\n              </Button>\r\n            )}\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// this is the manage users section\r\n// here the authority can see all the active users in its zone\r\n// it can manage permissions for the users by clicking on a row in the datatable\r\n// which allows them to change the status to allowed / blocked\r\n// (an email notification is sent out to the users too)\r\nimport React from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport axios from \"axios\";\r\nimport {\r\n  GET_GEO_NEAR_REPORTS,\r\n  UPDATE_USER_STATUS,\r\n  SEND_EMAIL\r\n} from \"./../../utility/constants.js\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport AlertDialog from \"./../../components/alert_update_user_status\";\r\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\r\n\r\nlet getMuiTheme = () =>\r\n  createMuiTheme({\r\n    palette: { type: \"dark\" },\r\n    overrides: {\r\n      MuiTableRow: {\r\n        root: {\r\n          cursor: \"pointer\"\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\nclass Users extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      usersDataTable: \"\",\r\n      dialogOpenState: false,\r\n      clickedRow: \"\",\r\n      dataCounter: 0\r\n    };\r\n    let self = this;\r\n    axios\r\n      .post(GET_GEO_NEAR_REPORTS, {\r\n        data: {\r\n          authorityId: this.props.authorityId\r\n        }\r\n      })\r\n      .then(response => {\r\n        if (response.data.length > 0) {\r\n          let data = response.data;\r\n          let madeData = {};\r\n\r\n          let formattedData = data.forEach(report => {\r\n            if (madeData[report.userId] === undefined) {\r\n              madeData[report.userId] = {\r\n                \"User Id\": report.userId,\r\n                Name: this.capitalize(report.user_full_name),\r\n                Email: report.user_email,\r\n                \"User Status\": this.capitalize(report.user_status)\r\n              };\r\n            }\r\n          });\r\n          formattedData = Object.values(madeData);\r\n\r\n          let finalColumns = [];\r\n          let columns = Object.keys(formattedData[0]);\r\n          columns.forEach(columnName => {\r\n            let column = {\r\n              name: columnName,\r\n              options: {\r\n                display: columnName === \"User Id\" ? false : true\r\n              }\r\n            };\r\n            finalColumns.push(column);\r\n          });\r\n          const options = {\r\n            filterType: \"checkbox\",\r\n            onRowClick: (rowData, rowState) => {\r\n              this.setState({\r\n                dialogOpenState: true,\r\n                clickedRow: rowData\r\n              });\r\n            },\r\n            selectableRows: \"none\"\r\n          };\r\n          self.setState(\r\n            {\r\n              dataCounter: finalColumns.length\r\n            },\r\n            () => {\r\n              self.setState({\r\n                usersDataTable: (\r\n                  <MuiThemeProvider theme={getMuiTheme()}>\r\n                    <MUIDataTable\r\n                      title={\"Users Active in Zone\"}\r\n                      data={formattedData}\r\n                      columns={finalColumns}\r\n                      options={options}\r\n                    />\r\n                  </MuiThemeProvider>\r\n                )\r\n              });\r\n            }\r\n          );\r\n        }\r\n      });\r\n  }\r\n\r\n  capitalize = str => {\r\n    str = str.split(\" \");\r\n\r\n    for (let i = 0, x = str.length; i < x; i++) {\r\n      str[i] = str[i][0].toUpperCase() + str[i].substr(1);\r\n    }\r\n\r\n    return str.join(\" \");\r\n  };\r\n\r\n  updateDialogState = () => {\r\n    this.setState({\r\n      dialogOpenState: false\r\n    });\r\n  };\r\n\r\n  updateUserStatus = () => {\r\n    axios\r\n      .post(UPDATE_USER_STATUS, {\r\n        data: {\r\n          userId: this.state.clickedRow[0],\r\n          status: this.state.clickedRow[3] === \"Allowed\" ? \"blocked\" : \"allowed\"\r\n        }\r\n      })\r\n      .then(response => {\r\n        let allowedMessage =\r\n          \"Hi \" +\r\n          this.state.clickedRow[1] +\r\n          \",\\n\\nWe have decided to turn your status back to allowed. You can now try signing into your account now. \\n\\nIf you have additional questions, feel free to send an email to support.spothole@gmail.com. Thank you for being a part of the Spothole community.\";\r\n        let blockedMessage =\r\n          \"Hi \" +\r\n          this.state.clickedRow[1] +\r\n          \",\\n\\nThere seems to be some unusual activity from your account. Your status has to be turned to blocked. \\n\\nIf you have additional questions, feel free to send an email to support.spothole@gmail.com. Thank you for joining the Spothole community.\";\r\n        axios\r\n          .post(SEND_EMAIL, {\r\n            data: {\r\n              emailId: this.state.clickedRow[2],\r\n              subject: \"New Notification from Spothole (Your Account Status)\",\r\n              message:\r\n                this.state.clickedRow[3] === \"Allowed\"\r\n                  ? blockedMessage\r\n                  : allowedMessage\r\n            }\r\n          })\r\n          .then(response => {\r\n            console.info(response.data);\r\n            window.location.reload();\r\n          });\r\n      })\r\n      .catch(error => {\r\n        console.info(\"Cannot update status currently!\");\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ marginTop: \"100px\" }}>\r\n        <Container>\r\n          <Typography\r\n            gutterBottom\r\n            style={{ textAlign: \"center\", fontSize: \"2.7em\" }}\r\n          >\r\n            Manage and Change&nbsp;\r\n            <SettingsIcon style={{ fontSize: 50 }} color={\"primary\"} /> User\r\n            Level Permissions\r\n          </Typography>\r\n          <div>\r\n            <center>\r\n              <Typography\r\n                variant=\"body2\"\r\n                color=\"textSecondary\"\r\n                component=\"p\"\r\n                style={{\r\n                  textAlign: \"center\",\r\n                  fontSize: \"1.5em\",\r\n                  maxWidth: \"500\"\r\n                }}\r\n              >\r\n                View active users in your region and manage their permissions\r\n                easily.\r\n              </Typography>\r\n            </center>\r\n          </div>\r\n        </Container>\r\n        {this.state.dataCounter === 0 && (\r\n          <div\r\n            style={{\r\n              textAlign: \"center\",\r\n              fontWeight: \"bold\",\r\n              fontSize: \"24px\",\r\n              marginTop: \"150px\",\r\n              color: \"#333\"\r\n            }}\r\n          >\r\n            {\" \"}\r\n            No Active Users in your Zone yet. <br /> You can keep monitoring\r\n            this page <br /> for seeing New User Activity.\r\n          </div>\r\n        )}\r\n        {this.state.dataCounter !== 0 && (\r\n          <Container style={{ marginTop: \"50px\" }}>\r\n            {this.state.usersDataTable}\r\n            <AlertDialog\r\n              dialogOpenState={this.state.dialogOpenState}\r\n              updateCloseDialogState={this.updateDialogState}\r\n              title={\r\n                \"Change User Status to \" +\r\n                (this.state.clickedRow[3] === \"Allowed\" ? \"Blocked\" : \"Allowed\")\r\n              }\r\n              content={\"Are you sure you want to change the status?\"}\r\n              buttonText={\"Yes, Change Status\"}\r\n              linkTo={\"/users\"}\r\n              updateUserStatus={this.updateUserStatus}\r\n              color={\"secondary\"}\r\n            />\r\n          </Container>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Users;\r\n","// this is the top app bar. contains all navigation menu options\r\nimport React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport PollIcon from \"@material-ui/icons/Poll\";\r\nimport AddLocationIcon from \"@material-ui/icons/AddLocation\";\r\nimport AssignmentIndIcon from \"@material-ui/icons/AssignmentInd\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  hide: {\r\n    display: \"none\"\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\"\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    marginLeft: -drawerWidth\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    }),\r\n    marginLeft: 0\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\"\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 7),\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: 120,\r\n      \"&:focus\": {\r\n        width: 200\r\n      }\r\n    }\r\n  }\r\n}));\r\n\r\nexport default function PersistentDrawerLeft() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n\r\n          <Typography variant=\"h5\" noWrap>\r\n            Spothole Authority\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"ltr\" ? (\r\n              <ChevronLeftIcon />\r\n            ) : (\r\n              <ChevronRightIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <Link to=\"/mapview\">\r\n            <ListItem onClick={handleDrawerClose} button key={\"Report\"}>\r\n              <ListItemIcon>\r\n                <AddLocationIcon color=\"primary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary={\"Map Region View\"} />\r\n            </ListItem>\r\n          </Link>\r\n          <Link to=\"/\">\r\n            <ListItem onClick={handleDrawerClose} button key={\"Dashboard\"}>\r\n              <ListItemIcon>\r\n                <PollIcon color=\"primary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary={\"Dashboard\"} />\r\n            </ListItem>\r\n          </Link>\r\n          <Link to=\"/users\">\r\n            <ListItem onClick={handleDrawerClose} button key={\"Manage Users\"}>\r\n              <ListItemIcon>\r\n                <NavigationIcon color=\"primary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary={\"Manage Users\"} />\r\n            </ListItem>\r\n          </Link>\r\n          <Link to=\"/profile\">\r\n            <ListItem onClick={handleDrawerClose} button key={\"Profile\"}>\r\n              <ListItemIcon>\r\n                <AssignmentIndIcon color=\"primary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary={\"Profile\"} />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n        <Link to=\"/logout\">\r\n          <ListItem onClick={handleDrawerClose} button key={\"Logout\"}>\r\n            <ListItemIcon>\r\n              <ExitToAppIcon color=\"primary\" />\r\n            </ListItemIcon>\r\n            <ListItemText primary={\"Logout\"} />\r\n          </ListItem>\r\n        </Link>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n","// used to separate components from navbar\r\nimport React from \"react\";\r\n\r\nconst HeaderSeparator = () => {\r\n  return <div style={{ marginTop: \"50px\" }}></div>;\r\n};\r\n\r\nexport default HeaderSeparator;\r\n","// the main sign in screen for the application. uses unsplash api\r\n// to load random background images and uses the google OAuth signin api.\r\nimport React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PinDropIcon from \"@material-ui/icons/PinDrop\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: \"100vh\"\r\n  },\r\n  image: {\r\n    backgroundImage: \"url(https://source.unsplash.com/random?road)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\"\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    marginTop: \"50px\",\r\n    backgroundColor: theme.palette.primary.main\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  submit: {\r\n    marginTop: \"50px\",\r\n    maxWidth: \"250px\",\r\n    paddingTop: \"15px\",\r\n    paddingBottom: \"15px\"\r\n  }\r\n}));\r\n\r\nexport default function SignInSide(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        sm={8}\r\n        md={5}\r\n        component={Paper}\r\n        elevation={6}\r\n        square\r\n        style={{\r\n          backgroundImage:\r\n            \"url('https://images.unsplash.com/photo-1543839482-a95d35fc5a77?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=900&q=80'), linear-gradient(rgba(0,0,0,0.6),rgba(0,0,0,0.6))\",\r\n          backgroundBlendMode: \"overlay\",\r\n          borderLeft: \"5px SOLID #212121\"\r\n        }}\r\n      >\r\n        <div className={classes.paper}>\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h1\"\r\n            style={{ marginTop: \"100px\" }}\r\n          >\r\n            <b>\r\n              <PinDropIcon fontSize={\"inherit\"} />\r\n            </b>\r\n          </Typography>\r\n          <br />\r\n          <Typography component=\"h1\" variant=\"h3\">\r\n            <b>Spothole</b>\r\n          </Typography>\r\n          <br />\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h5\"\r\n            style={{ marginTop: \"100px\" }}\r\n          >\r\n            <b>Sign In</b>\r\n          </Typography>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={() =>\r\n              document.getElementsByClassName(\"abcRioButton\")[0].click()\r\n            }\r\n          >\r\n            <b>\r\n              Sign In With Google &nbsp;\r\n              <LockOpenIcon />\r\n            </b>\r\n          </Button>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","// authentication component for validating any given route\r\n// uses google o-auth 2.0 api for the purpose of authentication\r\n// uses the isSignedIn state variable to manage the state of login for the authority\r\n// also blocks users with status \"blocked\" from entering\r\n/* global gapi */\r\nimport React, { Component } from \"react\";\r\nimport MapRegionView from \"./../../navigation/mapview\";\r\nimport Profile from \"./../../navigation/profile\";\r\nimport Dashboard from \"./../../navigation/dashboard\";\r\nimport Users from \"./../../navigation/users\";\r\nimport NavBar from \"./../../navigation/navbar\";\r\nimport HeaderSeparator from \"./../header_separator\";\r\nimport SignUp from \"./../signup\";\r\nimport {\r\n  HOST_NAME,\r\n  VALIDATE_AUTHORITY,\r\n  UPDATE_AUTHORITY_PROFILE,\r\n  CLIENT_ID,\r\n  UA_LOGIN\r\n} from \"./../../utility/constants.js\";\r\nimport axios from \"axios\";\r\n\r\nclass Auth extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isSignedIn: false,\r\n      authorityId: \"\",\r\n      profileName: \"\",\r\n      profileEmail: \"\",\r\n      profilePhotoURL: \"\"\r\n    };\r\n  }\r\n\r\n  // sets the state once signed in and calls the renderer\r\n  // uses the o-auth 2.0 api\r\n  componentDidMount() {\r\n    const successCallback = this.onSuccess.bind(this);\r\n    window.gapi.load(\"auth2\", () => {\r\n      this.auth2 = gapi.auth2.init({\r\n        client_id: CLIENT_ID\r\n      });\r\n      this.auth2.then(() => {\r\n        let basicProfile = window.gapi.auth2\r\n          .getAuthInstance()\r\n          .currentUser.get()\r\n          .getBasicProfile();\r\n        this.setState({\r\n          isSignedIn: this.auth2.isSignedIn.get(),\r\n          authorityId: basicProfile.getId() || \"\",\r\n          profileName: basicProfile.getName() || \"\",\r\n          profileEmail: basicProfile.getEmail() || \"\",\r\n          profilePhotoURL: basicProfile.getImageUrl() || \"\"\r\n        });\r\n      });\r\n    });\r\n\r\n    this.callRender(successCallback);\r\n  }\r\n  // success renderer\r\n  // requires the callback function as a param\r\n  callRender = successCallback => {\r\n    window.gapi.load(\"signin2\", function() {\r\n      // using this method will show Signed In if the user is already signed in\r\n      var opts = {\r\n        width: 0,\r\n        height: 0,\r\n        client_id: CLIENT_ID,\r\n        onsuccess: successCallback,\r\n        longTitle: false,\r\n        theme: \"dark\"\r\n      };\r\n      gapi.signin2.render(\"loginButton\", opts);\r\n    });\r\n  };\r\n\r\n  // logout and reset the signedIn state variable\r\n  logout = redirectURL => {\r\n    if (this.state.isSignedIn) {\r\n      window.gapi.auth2\r\n        .getAuthInstance()\r\n        .signOut()\r\n        .then(() => {\r\n          this.setState(\r\n            {\r\n              isSignedIn: this.auth2.isSignedIn.get()\r\n            },\r\n            () => {\r\n              localStorage.setItem(\"authoritySignedIn\", false);\r\n              this.urlRedirect(redirectURL || HOST_NAME);\r\n            }\r\n          );\r\n        });\r\n    } else {\r\n      console.info(\"Already Signed In\");\r\n    }\r\n  };\r\n\r\n  // redirects to the home page\r\n  // requires home page url as param\r\n  urlRedirect = url => {\r\n    var X = setTimeout(function() {\r\n      window.location.replace(url);\r\n      return true;\r\n    }, 300);\r\n\r\n    if ((window.location = url)) {\r\n      clearTimeout(X);\r\n      return true;\r\n    } else {\r\n      if ((window.location.href = url)) {\r\n        clearTimeout(X);\r\n        return true;\r\n      } else {\r\n        clearTimeout(X);\r\n        window.location.replace(url);\r\n        return true;\r\n      }\r\n    }\r\n  };\r\n\r\n  // updates or inserts the first time authority profile after logging in\r\n  validateAndPostProfileData = basicProfile => {\r\n    axios\r\n      .post(VALIDATE_AUTHORITY, {\r\n        data: {\r\n          emailId: basicProfile.getEmail()\r\n        }\r\n      })\r\n      .then(response => {\r\n        if (response.data === \"Authorized Login\") {\r\n          axios.post(UPDATE_AUTHORITY_PROFILE, {\r\n            data: {\r\n              authorityId: basicProfile.getId(),\r\n              emailId: basicProfile.getEmail(),\r\n              name: basicProfile.getName(),\r\n              photoURL: basicProfile.getImageUrl()\r\n            }\r\n          });\r\n        } else {\r\n          this.logout(UA_LOGIN);\r\n          console.info(\"Unauthorized Login\");\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.logout();\r\n        console.info(\"Cannot login at this time!\");\r\n      });\r\n  };\r\n\r\n  // success callback\r\n  // sets the local storage and the state variable\r\n  // sets the profile data state variables\r\n  // posts the profile data to the server\r\n  onSuccess() {\r\n    let basicProfile = window.gapi.auth2\r\n      .getAuthInstance()\r\n      .currentUser.get()\r\n      .getBasicProfile();\r\n    localStorage.setItem(\"authoritySignedIn\", true);\r\n    this.setState(\r\n      {\r\n        isSignedIn: true,\r\n        err: null,\r\n        authorityId: basicProfile.getId(),\r\n        profileName: basicProfile.getName(),\r\n        profileEmail: basicProfile.getEmail(),\r\n        profilePhotoURL: basicProfile.getImageUrl()\r\n      },\r\n      () => {\r\n        this.validateAndPostProfileData(basicProfile);\r\n      }\r\n    );\r\n  }\r\n\r\n  // on failure to login sets\r\n  // the state varibales accordingly\r\n  onLoginFailed(err) {\r\n    this.setState({\r\n      isSignedIn: false,\r\n      error: err\r\n    });\r\n  }\r\n\r\n  // associates the navbar after successful sign in\r\n  navigationBar = () => {\r\n    return (\r\n      <div>\r\n        {\" \"}\r\n        <NavBar />\r\n        <HeaderSeparator />{\" \"}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // on the basis of login status renders the associated component\r\n  // and passes it the required params\r\n  loginStatus() {\r\n    if (\r\n      localStorage.getItem(\"authoritySignedIn\") === \"true\" &&\r\n      this.state.isSignedIn\r\n    ) {\r\n      switch (this.props.linkTo) {\r\n        case \"/dashboard\":\r\n          return (\r\n            <div>\r\n              <Dashboard authorityId={this.state.authorityId} />\r\n              {this.navigationBar()}\r\n            </div>\r\n          );\r\n        case \"/mapview\":\r\n          return (\r\n            <div>\r\n              <MapRegionView authorityId={this.state.authorityId} />\r\n              {this.navigationBar()}\r\n            </div>\r\n          );\r\n        case \"/users\":\r\n          return (\r\n            <div>\r\n              <Users authorityId={this.state.authorityId} />\r\n              {this.navigationBar()}\r\n            </div>\r\n          );\r\n        case \"/logout\":\r\n          this.logout();\r\n          break;\r\n        case \"/profile\":\r\n          return (\r\n            <div>\r\n              <Profile\r\n                authorityId={this.state.authorityId}\r\n                name={this.state.profileName}\r\n                email={this.state.profileEmail}\r\n                photoURL={this.state.profilePhotoURL}\r\n              />\r\n              {this.navigationBar()}\r\n            </div>\r\n          );\r\n        case \"/\":\r\n          return (\r\n            <div>\r\n              <Dashboard authorityId={this.state.authorityId} />\r\n              {this.navigationBar()}\r\n            </div>\r\n          );\r\n        default:\r\n          return (\r\n            <div>\r\n              <Dashboard authorityId={this.state.authorityId} />\r\n              {this.navigationBar()}\r\n            </div>\r\n          );\r\n      }\r\n    } else if (\r\n      localStorage.getItem(\"authoritySignedIn\") === \"false\" &&\r\n      this.state.isSignedIn\r\n    ) {\r\n      this.urlRedirect(HOST_NAME);\r\n    } else {\r\n      if (localStorage.getItem(\"authoritySignedIn\") !== \"true\") {\r\n        return (\r\n          <div>\r\n            <div id=\"loginButton\" style={{ display: \"none\" }}>\r\n              Login with Google\r\n            </div>\r\n            <SignUp />\r\n          </div>\r\n        );\r\n      } else {\r\n        return <div />;\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <div>{this.loginStatus()}</div>;\r\n  }\r\n}\r\n\r\nexport default Auth;\r\n","// for unaouthorized routes\r\nimport React from \"react\";\r\nclass NotFound extends React.Component {\r\n  render() {\r\n    window.location.href = \"https://nirbhay.me/spothole/404\";\r\n    return <div>404</div>;\r\n  }\r\n}\r\n\r\nexport default NotFound;\r\n","// the main routing component. based on the URL, it renders the auth component\n// for a particular path.\nimport React from \"react\";\nimport Auth from \"./components/authentication\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { createMuiTheme } from \"@material-ui/core\";\nimport NotFound from \"./components/not_found\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: {\n      main: \"#2997f7\"\n    },\n    secondary: {\n      main: \"#ff0000\"\n    }\n  },\n  overrides: {\n    MuiPaper: {\n      root: {\n        backgroundColor: \"#333\"\n      }\n    },\n    MuiStepper: {\n      root: {\n        padding: \"0px\"\n      }\n    }\n  }\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <div>\n          <Switch>\n            <Route path=\"/mapview\" exact>\n              <Auth linkTo=\"/mapview\" />\n            </Route>\n            <Route path=\"/profile\" exact>\n              <Auth linkTo=\"/profile\" />\n            </Route>\n            <Route path=\"/logout\" exact>\n              <Auth linkTo=\"/logout\" />\n            </Route>\n            <Route path=\"/users\" exact>\n              <Auth linkTo=\"/users\" />\n            </Route>\n            <Route path=\"/dashboard\" exact>\n              <Auth linkTo=\"/dashboard\" />\n            </Route>\n            <Route path=\"/\" exact>\n              <Auth linkTo=\"/dashboard\" />\n            </Route>\n            <Route path=\"*\" exact={true} component={NotFound}></Route>\n          </Switch>\n        </div>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}